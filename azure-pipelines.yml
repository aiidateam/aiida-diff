# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
trigger:
- master

variables:
  AIIDA_DEVELOP_GIT_HASH: e852d66fc51345fbdb8ebf98580a5646d79bc043

jobs:
- job: test
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python36:
        python.version: '3.6'
    maxParallel: 4

  steps:
  - template: .ci/azure-templates/setup-steps.yml
  - template: .ci/azure-templates/install-steps.yml

  - script: |
      py.test --junitxml=test-results.xml --cov aiida_zeopp --cov-append .
    displayName: 'Run pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: docs
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python36:
        python.version: '3.6'
    maxParallel: 4
  variables:
    READTHEDOCS: 'True'

  steps:
  - template: .ci/azure-templates/setup-steps.yml
  - template: .ci/azure-templates/install-steps.yml

  - script: cd docs; make
    displayName: 'Make docs'


- job: pre_commit
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python36:
        python.version: '3.6'
    maxParallel: 4

  steps:
  - template: .ci/azure-templates/setup-steps.yml
  - template: .ci/azure-templates/install-steps.yml

  - script: pre-commit install; pre-commit run --all-files || ( git status --short; git diff ; exit 1 );
    displayName: 'Run pre-commit check'

- job: coveralls
  dependsOn:
    - test
  steps:

  - script: coveralls
    displayName: 'Upload test coverage to coveralls.io'

# - job: 'Publish'
#   dependsOn: 'Test'
#   pool:
#     vmImage: 'Ubuntu-16.04'

#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.x'
#       architecture: 'x64'

#   - script: python setup.py sdist
#     displayName: 'Build sdist'
